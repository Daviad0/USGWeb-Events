<%- include('components/common') %>
<%- include('components/header', { session: session }) %>

<% 

members = members.sort(function(a, b) {
    // sort by username
    if(a.username < b.username) {
        return -1;
    } else if(a.username > b.username) {
        return 1;
    } else {
        return 0;
    }
});

%>

<div class="content">
    <br/>

    <div class="flex-center">
        <span class="huge">Members With Internal USG Website Access</span>
    </div>

    <br/>
    <hr/>
    <br/>

    <div>
        <span class="medium">Add Members</span>
        <div class="flex-center">
            <div name="members">
                <div style="display:none" id="add-member-template" class="flex-center">
                    <input type="text" placeholder="Username" />
                    <select>
                        <option value="member">Member</option>
                        <option value="admin">Admin</option>
                    </select>
                </div>
                <div name="add-member" class="flex-center">
                    <input type="text" placeholder="Username" />
                    <select>
                        <option value="member">Member</option>
                        <option value="admin">Admin</option>
                    </select>
                </div>
            </div>
            <button id="add" class="flex-center">
                <span class="background small">Add</span>
            </button>
            <button id="append" class="flex-center">
                <span class="background small">+</span>
            </button>
        </div>
    </div>
    <br/>

    <% members.forEach(function(member) { %>
       <div name="access" data-username="<%= member.username %>" class="flex-center">
            <div class="segment member flex-apart">
                <span name="username" class="medium"><%= member.username %></span>
                <span name="date-updated" class="small flex-1"><i>Last Updated <%= member.updated %></i></span>
                <select name="access-level" onchange="updateMember('<%= member.username %>', this.value)">
                    <option value="member" <% if(member.access == "member") { %>selected<% } %>>Member</option>
                    <option value="admin" <% if(member.access == "admin") { %>selected<% } %>>Admin</option>
                </select>
                
            </div>
       </div>
    <% }); %>
</div>

<script>
    let existingMembers = [];

    document.querySelectorAll('div[name="access"]').forEach((element) => {
        existingMembers.push(element.getAttribute('data-username'));
    });

    function updateMember(username, accessLevel) {
        let memberElement = document.querySelector(`div[name="access"][data-username="${username}"]`);

        if(memberElement) {
            let accessLevelElement = memberElement.querySelector('select[name="access-level"]');
            accessLevelElement.value = accessLevel;

            post('/internal/api/member',
                {
                    username: username,
                    access: accessLevel
                }
            ).then(() => {
                // do nothing to reload the page

                if(accessLevel == 'none') {
                    memberElement.remove();
                }

            }).catch((err) => {
                alert('An error occurred: ' + err);

                location.reload();
            });
        }
    }

    async function addMember(ev){

        ev.srcElement.disabled = true;

        let membersToAdd = document.querySelectorAll('div[name="add-member"]');
        

        let failed = 0;
        let alreadyExists = 0;

        for(let m = 0; m < membersToAdd.length; m++) {
            let member = membersToAdd[m];
            let username = member.querySelector('input').value;
            let accessLevel = member.querySelector('select').value;

            if(username.length == 0) {
                continue;
            }

            if(existingMembers.includes(username)) {
                alreadyExists++;
                continue;
            }

            try{
                let res = await post('/internal/api/member',
                    {
                        username: username,
                        access: accessLevel
                    }
                )
            }catch(e){
                failed++;
            }
        }

        if(failed > 0 || alreadyExists > 0) {
            alert('Failed to add ' + failed + ' members. ' + alreadyExists + ' members already exist.');
        }

        location.reload();

        
    }

    function appendMember() {
        let addMemberTemplate = document.getElementById('add-member-template');
        let addMember = addMemberTemplate.cloneNode(true);
        addMember.style.display = '';
        addMember.id = '';
        addMember.setAttribute('name', 'add-member');

        document.querySelector('div[name="members"]').appendChild(addMember);
    }

    document.getElementById('append').addEventListener('click', appendMember);
    document.getElementById('add').addEventListener('click', addMember);



</script>